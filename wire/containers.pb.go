// Code generated by protoc-gen-go.
// source: source/containers.proto
// DO NOT EDIT!

package wire

import proto "code.google.com/p/goprotobuf/proto"
import json "encoding/json"
import math "math"

// Reference proto, json, and math imports to suppress error if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

type Header struct {
	FromAddr         []byte  `protobuf:"bytes,1,req,name=from_addr" json:"from_addr,omitempty"`
	ToAddr           []byte  `protobuf:"bytes,2,req,name=to_addr" json:"to_addr,omitempty"`
	Timestamp        *uint64 `protobuf:"varint,3,req,name=timestamp" json:"timestamp,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Header) Reset()         { *m = Header{} }
func (m *Header) String() string { return proto.CompactTextString(m) }
func (*Header) ProtoMessage()    {}

func (m *Header) GetFromAddr() []byte {
	if m != nil {
		return m.FromAddr
	}
	return nil
}

func (m *Header) GetToAddr() []byte {
	if m != nil {
		return m.ToAddr
	}
	return nil
}

func (m *Header) GetTimestamp() uint64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

type SignedMessage struct {
	Data             []byte       `protobuf:"bytes,1,req,name=data" json:"data,omitempty"`
	Signature        []*Signature `protobuf:"bytes,2,rep,name=signature" json:"signature,omitempty"`
	SigningFunc      []byte       `protobuf:"bytes,3,opt,name=signing_func" json:"signing_func,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *SignedMessage) Reset()         { *m = SignedMessage{} }
func (m *SignedMessage) String() string { return proto.CompactTextString(m) }
func (*SignedMessage) ProtoMessage()    {}

func (m *SignedMessage) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *SignedMessage) GetSignature() []*Signature {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *SignedMessage) GetSigningFunc() []byte {
	if m != nil {
		return m.SigningFunc
	}
	return nil
}

type Signature struct {
	R                []byte `protobuf:"bytes,1,req,name=r" json:"r,omitempty"`
	S                []byte `protobuf:"bytes,2,req,name=s" json:"s,omitempty"`
	SigningKey       []byte `protobuf:"bytes,3,opt,name=signing_key" json:"signing_key,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Signature) Reset()         { *m = Signature{} }
func (m *Signature) String() string { return proto.CompactTextString(m) }
func (*Signature) ProtoMessage()    {}

func (m *Signature) GetR() []byte {
	if m != nil {
		return m.R
	}
	return nil
}

func (m *Signature) GetS() []byte {
	if m != nil {
		return m.S
	}
	return nil
}

func (m *Signature) GetSigningKey() []byte {
	if m != nil {
		return m.SigningKey
	}
	return nil
}

type EncryptedMessage struct {
	Data             []byte `protobuf:"bytes,1,req,name=data" json:"data,omitempty"`
	ToAddr           []byte `protobuf:"bytes,2,req,name=to_addr" json:"to_addr,omitempty"`
	Key              []byte `protobuf:"bytes,3,req,name=key" json:"key,omitempty"`
	EncFunc          []byte `protobuf:"bytes,4,opt,name=enc_func" json:"enc_func,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *EncryptedMessage) Reset()         { *m = EncryptedMessage{} }
func (m *EncryptedMessage) String() string { return proto.CompactTextString(m) }
func (*EncryptedMessage) ProtoMessage()    {}

func (m *EncryptedMessage) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *EncryptedMessage) GetToAddr() []byte {
	if m != nil {
		return m.ToAddr
	}
	return nil
}

func (m *EncryptedMessage) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *EncryptedMessage) GetEncFunc() []byte {
	if m != nil {
		return m.EncFunc
	}
	return nil
}

type Container struct {
	Header           *Header `protobuf:"bytes,1,req,name=header" json:"header,omitempty"`
	Data             []byte  `protobuf:"bytes,2,req,name=data" json:"data,omitempty"`
	Type             *string `protobuf:"bytes,3,req,name=type" json:"type,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Container) Reset()         { *m = Container{} }
func (m *Container) String() string { return proto.CompactTextString(m) }
func (*Container) ProtoMessage()    {}

func (m *Container) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Container) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Container) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func init() {
}
